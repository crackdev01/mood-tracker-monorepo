// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`EditEntryModal renders 1`] = `
"<Modal className=\\"edit-entry\\" closeIcon={true} open={true} onClose={[Function: mockConstructor] { _isMockFunction: true, getMockImplementation: [Function (anonymous)], mock: Object [Object: null prototype] { calls: [], instances: [], invocationCallOrder: [], results: [] }, mockClear: [Function (anonymous)], mockReset: [Function (anonymous)], mockRestore: [Function (anonymous)], mockReturnValueOnce: [Function (anonymous)], mockResolvedValueOnce: [Function (anonymous)], mockRejectedValueOnce: [Function (anonymous)], mockReturnValue: [Function (anonymous)], mockResolvedValue: [Function (anonymous)], mockRejectedValue: [Function (anonymous)], mockImplementationOnce: [Function (anonymous)], mockImplementation: [Function (anonymous)], mockReturnThis: [Function (anonymous)], mockName: [Function (anonymous)], getMockName: [Function (anonymous)] }} size=\\"tiny\\" centered={true} dimmer={true} closeOnDimmerClick={true} closeOnDocumentClick={false} eventPool=\\"Modal\\">
  <Header icon=\\"pencil\\" content=\\"header\\" />
  <ModalContent className=\\"edit-entry__content\\">
    <Dropdown className=\\"edit-entry__content__dropdown\\" placeholder=\\"moodStatus.placeholder\\" fluid={true} selection={true} options={{...}} onChange={[Function: addStatus]} defaultValue=\\"relaxed\\" additionLabel=\\"Add \\" additionPosition=\\"top\\" closeOnBlur={true} closeOnEscape={true} deburr={false} icon=\\"dropdown\\" minCharacters={1} noResultsMessage=\\"No results found.\\" openOnFocus={true} renderLabel={[Function: renderItemContent]} searchInput=\\"text\\" selectOnBlur={true} selectOnNavigation={true} wrapSelection={true} />
    <Dropdown className=\\"edit-entry__content__dropdown\\" placeholder=\\"intensity.placeholder\\" fluid={true} selection={true} options={{...}} onChange={[Function: addIntensity]} defaultValue={0} additionLabel=\\"Add \\" additionPosition=\\"top\\" closeOnBlur={true} closeOnEscape={true} deburr={false} icon=\\"dropdown\\" minCharacters={1} noResultsMessage=\\"No results found.\\" openOnFocus={true} renderLabel={[Function: renderItemContent]} searchInput=\\"text\\" selectOnBlur={true} selectOnNavigation={true} wrapSelection={true} />
  </ModalContent>
  <ModalActions className=\\"edit-entry__actions\\">
    <Button className=\\"edit-entry__actions__yes\\" onClick={[Function: editMoodEntry]} as=\\"button\\">
      <Icon name=\\"checkmark\\" as=\\"i\\" />
       
      buttons.yes
    </Button>
    <Button className=\\"edit-entry__actions__no\\" onClick={[Function: mockConstructor] { _isMockFunction: true, getMockImplementation: [Function (anonymous)], mock: Object [Object: null prototype] { calls: [], instances: [], invocationCallOrder: [], results: [] }, mockClear: [Function (anonymous)], mockReset: [Function (anonymous)], mockRestore: [Function (anonymous)], mockReturnValueOnce: [Function (anonymous)], mockResolvedValueOnce: [Function (anonymous)], mockRejectedValueOnce: [Function (anonymous)], mockReturnValue: [Function (anonymous)], mockResolvedValue: [Function (anonymous)], mockRejectedValue: [Function (anonymous)], mockImplementationOnce: [Function (anonymous)], mockImplementation: [Function (anonymous)], mockReturnThis: [Function (anonymous)], mockName: [Function (anonymous)], getMockName: [Function (anonymous)] }} as=\\"button\\">
      <Icon name=\\"remove\\" as=\\"i\\" />
       
      buttons.no
    </Button>
  </ModalActions>
</Modal>"
`;
